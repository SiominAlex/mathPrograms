package quadraticEquation

/*
	Стандартная библиотека, входящая в комплект Go, представляет собой набор пакетов.
	Эти пакеты содержат множество фундаментальных компонентов для современного программного обеспечения.
	Например, пакет fmt содержит базовые функции для форматирования и вывода строк.
	Пакет net/http содержит функции, позволяющие разработчику создавать веб-службы, отправлять и получать данные
	по протоколу http и т. д.
	Чтобы использовать функции пакета, необходимо получить доступ к нему с помощью выражения import.
	Выражение import состоит из ключевого слова import и имени пакета.
*/
import (
	// Импортируем библиотеку для стандартного ввода-вывода
	"fmt"
	"math"
	// Импортируем библиотеку для работы с ОС
	"os"
)

// func - ключевое слово для определения функции (которая что-то делает)
// Основная функция программы - при запуске программа открывает её
func QuadraticEquation() {
	var a float64
	var b float64
	var c float64

	// Выводим приветствие с помощью функции Println из библиотеки fmt
	fmt.Println("Привет! Это программа решает квадратные уравнения. Автор: Сёмин Александр.")
	fmt.Println("Квадратное уравнение выглядит так (ax² + bx + c = 0):")

	fmt.Print("Введите значение a: ")
	fmt.Fscan(os.Stdin, &a)
	fmt.Print("Введите значение b: ")
	fmt.Fscan(os.Stdin, &b)
	fmt.Print("Введите значение c: ")
	fmt.Fscan(os.Stdin, &c)

	fmt.Println("Чтобы определить, сколько корней имеет уравнение, нужно обратить внимание на дискриминант.")
	fmt.Println("Чтобы его найти, берем формулу: D = b² − 4ac.")
	fmt.Println("Давай узнаем значение D")

	d := math.Pow(b, 2) - 4*a*c
	fmt.Println("D = ", d)

	var result string = ""

	if d > 0 {
		var x1 float64 = (-b + math.Sqrt(d)) / 2 * a
		var x2 float64 = (-b - math.Sqrt(d)) / 2 * a
		result = "x1 = " + fmt.Sprint(x1) + ", x2 = " + fmt.Sprint(x2)
	} else if d == 0 {
		var x1 float64 = -b / 2 * a
		result = "x1 = " + fmt.Sprint(x1)
	} else {
		result = "Корней нет"
	}

	fmt.Println(result)
	fmt.Println("Программа завершена, нажмите любую клавишу для выхода")
	fmt.Scanln()

}
